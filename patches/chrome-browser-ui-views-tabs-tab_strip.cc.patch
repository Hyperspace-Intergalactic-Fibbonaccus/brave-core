diff --git a/chrome/browser/ui/views/tabs/tab_strip.cc b/chrome/browser/ui/views/tabs/tab_strip.cc
index 1f7870f9ec645bd5eb15fc7b0e688bc9e60cb6eb..7fd03beb07c9fa0ab8210bcd37770cff49c8847d 100644
--- a/chrome/browser/ui/views/tabs/tab_strip.cc
+++ b/chrome/browser/ui/views/tabs/tab_strip.cc
@@ -219,8 +219,9 @@ const TabSizeInfo& GetTabSizeInfo() {
   g_tab_size_info->pinned_tab_width = Tab::GetPinnedWidth();
   g_tab_size_info->min_active_width = Tab::GetMinimumActiveWidth();
   g_tab_size_info->min_inactive_width = Tab::GetMinimumInactiveWidth();
+  // Brave: make sure tabs don't fill entire top area reserved for shadow
   g_tab_size_info->standard_size =
-      gfx::Size(Tab::GetStandardWidth(), GetLayoutConstant(TAB_HEIGHT));
+      gfx::Size(Tab::GetStandardWidth(), GetLayoutConstant(TAB_HEIGHT) + BrowserNonClientFrameView::kMinimumDragHeight);
   g_tab_size_info->tab_overlap = Tab::GetOverlap();
   g_tab_size_info->pinned_to_normal_offset =
       TabStrip::GetPinnedToNonPinnedOffset();
@@ -446,7 +447,7 @@ void TabStrip::StopAllHighlighting() {
 void TabStrip::AddTabAt(int model_index, TabRendererData data, bool is_active) {
   const bool was_single_tab_mode = SingleTabMode();
 
-  Tab* tab = new Tab(this, animation_container_.get());
+  Tab* tab = new BraveTab(this, animation_container_.get());
   AddChildView(tab);
   const bool pinned = data.pinned;
   tab->SetData(std::move(data));
